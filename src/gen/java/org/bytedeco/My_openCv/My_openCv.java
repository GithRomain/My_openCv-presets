// Targeted by JavaCPP version 1.5.9: DO NOT EDIT THIS FILE

package org.bytedeco.My_openCv;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import static org.bytedeco.openblas.global.openblas_nolapack.*;
import static org.bytedeco.openblas.global.openblas.*;
import org.bytedeco.opencv.opencv_core.*;
import static org.bytedeco.opencv.global.opencv_core.*;
import org.bytedeco.opencv.opencv_imgproc.*;
import static org.bytedeco.opencv.global.opencv_imgproc.*;
import static org.bytedeco.opencv.global.opencv_imgcodecs.*;
import org.bytedeco.opencv.opencv_videoio.*;
import static org.bytedeco.opencv.global.opencv_videoio.*;
import org.bytedeco.opencv.opencv_highgui.*;
import static org.bytedeco.opencv.global.opencv_highgui.*;

import static org.bytedeco.My_openCv.global.My_openCv.*;


@Properties(inherit = org.bytedeco.My_openCv.presets.My_openCv.class)
public class My_openCv extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public My_openCv() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public My_openCv(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public My_openCv(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public My_openCv position(long position) {
        return (My_openCv)super.position(position);
    }
    @Override public My_openCv getPointer(long i) {
        return new My_openCv((Pointer)this).offsetAddress(i);
    }

    public native @ByVal Mat createMat(@StdString BytePointer path_to_an_image);
    public native @ByVal Mat createMat(@StdString String path_to_an_image);
    public native void printImg(@ByVal Mat mat);
}
